// <auto-generated />
using System;
using CoffeeMachine.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CoffeeMachine.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220624051636_AddBalanceAndIncomeEntities2")]
    partial class AddBalanceAndIncomeEntities2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Balance", b =>
                {
                    b.Property<Guid>("BalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CoffeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("EarnedMoney")
                        .HasColumnType("integer");

                    b.HasKey("BalanceId");

                    b.HasIndex("CoffeeId");

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.BanknoteCashBox", b =>
                {
                    b.Property<Guid>("BanknoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CountBanknote")
                        .HasColumnType("integer");

                    b.Property<int>("Denomination")
                        .HasColumnType("integer");

                    b.HasKey("BanknoteId");

                    b.ToTable("BanknoteCashBoxes");

                    b.HasData(
                        new
                        {
                            BanknoteId = new Guid("cd2d1469-6390-44c2-8efa-d47bceb99b4e"),
                            CountBanknote = 50,
                            Denomination = 50
                        },
                        new
                        {
                            BanknoteId = new Guid("8942c6a5-78be-43fc-ab2c-804ae4ecb24a"),
                            CountBanknote = 40,
                            Denomination = 100
                        },
                        new
                        {
                            BanknoteId = new Guid("d46227f4-1deb-4b7f-834c-a2810a716706"),
                            CountBanknote = 30,
                            Denomination = 200
                        },
                        new
                        {
                            BanknoteId = new Guid("004d57a0-c692-4468-a019-cc78ee70fc0e"),
                            CountBanknote = 20,
                            Denomination = 500
                        },
                        new
                        {
                            BanknoteId = new Guid("f1da1957-a339-4310-92ea-1bd7f0a213e3"),
                            CountBanknote = 15,
                            Denomination = 1000
                        },
                        new
                        {
                            BanknoteId = new Guid("b963b79a-9b1c-499e-9fb8-b8b911dea012"),
                            CountBanknote = 10,
                            Denomination = 2000
                        },
                        new
                        {
                            BanknoteId = new Guid("1f87ede8-8b5e-46d2-b823-08ccda166b60"),
                            CountBanknote = 5,
                            Denomination = 5000
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Coffee", b =>
                {
                    b.Property<Guid>("CoffeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("CoffeeId");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            CoffeeId = new Guid("cce8ea4e-56ae-42b8-b653-edbf06f80e09"),
                            Name = "Капучино",
                            Price = 600
                        },
                        new
                        {
                            CoffeeId = new Guid("f8c20893-4dcd-4eae-966a-01939b5f1898"),
                            Name = "Латте",
                            Price = 850
                        },
                        new
                        {
                            CoffeeId = new Guid("ef46484b-ffe3-4972-a597-5b3fe7d6399e"),
                            Name = "Американо",
                            Price = 900
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Income", b =>
                {
                    b.Property<int>("IncomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TotalIncome")
                        .HasColumnType("integer");

                    b.HasKey("IncomeId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CashDepositAmount")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CoffeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("ContributedMoney")
                        .HasColumnType("integer");

                    b.HasKey("PaymentId");

                    b.HasIndex("CoffeeId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Balance", b =>
                {
                    b.HasOne("CoffeeMachine.Domain.Entities.Coffee", "Coffee")
                        .WithMany()
                        .HasForeignKey("CoffeeId");

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Payment", b =>
                {
                    b.HasOne("CoffeeMachine.Domain.Entities.Coffee", "Coffee")
                        .WithMany("Payments")
                        .HasForeignKey("CoffeeId");

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeMachine.Domain.Entities.Coffee", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
