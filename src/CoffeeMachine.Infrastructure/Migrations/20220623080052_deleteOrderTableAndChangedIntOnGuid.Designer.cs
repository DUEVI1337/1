// <auto-generated />
using System;
using CoffeeMachine.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CoffeeMachine.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220623080052_deleteOrderTableAndChangedIntOnGuid")]
    partial class deleteOrderTableAndChangedIntOnGuid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CoffeeMachine.Core.Entities.BanknoteCashBox", b =>
                {
                    b.Property<Guid>("BanknoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CountBanknote")
                        .HasColumnType("integer");

                    b.Property<int>("Denomination")
                        .HasColumnType("integer");

                    b.HasKey("BanknoteId");

                    b.ToTable("BanknoteCashBoxes");

                    b.HasData(
                        new
                        {
                            BanknoteId = new Guid("b16136a2-1652-40ec-95f2-2f55b7bbd854"),
                            CountBanknote = 50,
                            Denomination = 50
                        },
                        new
                        {
                            BanknoteId = new Guid("0e1899f5-c1e1-4018-a454-f56c6074d3ea"),
                            CountBanknote = 40,
                            Denomination = 100
                        },
                        new
                        {
                            BanknoteId = new Guid("6a491331-a10d-4ac1-b5d7-be6921d5cbab"),
                            CountBanknote = 30,
                            Denomination = 200
                        },
                        new
                        {
                            BanknoteId = new Guid("495e5fe8-943a-4fc4-8607-f6814731f31e"),
                            CountBanknote = 20,
                            Denomination = 500
                        },
                        new
                        {
                            BanknoteId = new Guid("fdb65f57-c3e2-42e5-b1f4-088cbed3e94d"),
                            CountBanknote = 15,
                            Denomination = 1000
                        },
                        new
                        {
                            BanknoteId = new Guid("bff16cca-ebef-4b65-a3ea-554d130e1777"),
                            CountBanknote = 10,
                            Denomination = 2000
                        },
                        new
                        {
                            BanknoteId = new Guid("f2328c2c-0c4f-4d79-addb-db534a2c5b1e"),
                            CountBanknote = 5,
                            Denomination = 5000
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Core.Entities.Coffee", b =>
                {
                    b.Property<Guid>("CoffeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("CoffeeId");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            CoffeeId = new Guid("e801ef24-4af6-4bc9-a9bb-bd3efc040849"),
                            Name = "Капучино",
                            Price = 600
                        },
                        new
                        {
                            CoffeeId = new Guid("13f1d466-41eb-4f8c-9a67-e24dde4bae1e"),
                            Name = "Латте",
                            Price = 850
                        },
                        new
                        {
                            CoffeeId = new Guid("4dd54c3b-e12d-4ace-8920-6c7dcbc35cef"),
                            Name = "Американо",
                            Price = 900
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Core.Entities.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CashDepositAmount")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CoffeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("ContributedMoney")
                        .HasColumnType("integer");

                    b.HasKey("PaymentId");

                    b.HasIndex("CoffeeId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CoffeeMachine.Core.Entities.Payment", b =>
                {
                    b.HasOne("CoffeeMachine.Core.Entities.Coffee", "Coffee")
                        .WithMany("Payments")
                        .HasForeignKey("CoffeeId");

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeMachine.Core.Entities.Coffee", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
