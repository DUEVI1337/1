// <auto-generated />
using System;
using CoffeeMachine.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CoffeeMachine.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CoffeeMachine.Core.Entities.BanknoteCashBox", b =>
                {
                    b.Property<Guid>("BanknoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CountBanknote")
                        .HasColumnType("integer");

                    b.Property<int>("Denomination")
                        .HasColumnType("integer");

                    b.HasKey("BanknoteId");

                    b.ToTable("BanknoteCashBoxes");

                    b.HasData(
                        new
                        {
                            BanknoteId = new Guid("8cdf142c-dfac-46e8-a38e-cd2d80d5361d"),
                            CountBanknote = 50,
                            Denomination = 50
                        },
                        new
                        {
                            BanknoteId = new Guid("cc803d87-1a88-427b-9cae-a2228ca6b2b1"),
                            CountBanknote = 40,
                            Denomination = 100
                        },
                        new
                        {
                            BanknoteId = new Guid("a0925e47-3b69-41f3-8e06-3528e9ecb1ee"),
                            CountBanknote = 30,
                            Denomination = 200
                        },
                        new
                        {
                            BanknoteId = new Guid("0589be88-4cac-43cf-8533-463a53bbbf51"),
                            CountBanknote = 20,
                            Denomination = 500
                        },
                        new
                        {
                            BanknoteId = new Guid("71e0ca92-82f3-447b-ba50-5e376299f52f"),
                            CountBanknote = 15,
                            Denomination = 1000
                        },
                        new
                        {
                            BanknoteId = new Guid("69184024-5450-4a67-9bb5-37d0c625c3d9"),
                            CountBanknote = 10,
                            Denomination = 2000
                        },
                        new
                        {
                            BanknoteId = new Guid("2f6bb2f9-26b3-49ae-a6fc-a93afa917631"),
                            CountBanknote = 5,
                            Denomination = 5000
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Core.Entities.Coffee", b =>
                {
                    b.Property<Guid>("CoffeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("CoffeeId");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            CoffeeId = new Guid("bb30094b-c15b-46aa-b172-f9e6ee67ed68"),
                            Name = "Капучино",
                            Price = 600
                        },
                        new
                        {
                            CoffeeId = new Guid("d242744b-e228-4642-b93b-c40c0163182a"),
                            Name = "Латте",
                            Price = 850
                        },
                        new
                        {
                            CoffeeId = new Guid("49d6ad06-225b-45e0-bbce-06496b4a14b1"),
                            Name = "Американо",
                            Price = 900
                        });
                });

            modelBuilder.Entity("CoffeeMachine.Core.Entities.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CashDepositAmount")
                        .HasColumnType("integer");

                    b.Property<Guid?>("CoffeeId")
                        .HasColumnType("uuid");

                    b.Property<int>("ContributedMoney")
                        .HasColumnType("integer");

                    b.HasKey("PaymentId");

                    b.HasIndex("CoffeeId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CoffeeMachine.Core.Entities.Payment", b =>
                {
                    b.HasOne("CoffeeMachine.Core.Entities.Coffee", "Coffee")
                        .WithMany("Payments")
                        .HasForeignKey("CoffeeId");

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeMachine.Core.Entities.Coffee", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
